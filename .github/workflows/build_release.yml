name: Build and Release Universal APK

on:
  push:
    tags:
      - 'v*' # Trigger only on version tags (e.g., v1.0.0)
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build:
    name: Build Universal APK
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up JDK
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    # Step 3: Set up Android SDK
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 33
        build-tools: '33.0.0'
        ndk: false

    # Step 4: Grant execute permissions to the Gradle wrapper
    - name: Grant Execute Permissions to Gradle Wrapper
      run: chmod +x ./gradlew

    # Step 5: Decode and save the keystore file securely
    - name: Decode and Save Keystore
      run: |
        echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > keystore.jks

    # Step 6: Build the universal APK
    - name: Build Universal APK
      env:
        KEYSTORE_FILE: keystore.jks
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: ./gradlew assembleRelease

    # Step 7: Remove the keystore after the build
    - name: Clean Up Keystore
      run: rm -f keystore.jks

    # Step 8: Create a release on GitHub
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    # Step 9: Upload the APK to the release
    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive
